#include <iostream>
using namespace std;
int climingStair(int n)
{
    if (n == 0 || n == 1)
    {
        return 1;
    }
    return climingStair(n - 1) + climingStair(n - 2);
}
bool searchArray(int arr[], int index, int size, int target)
{
    // base case
    if (index >= size)
    {
        return false;
    }
    if (arr[index] == target)
    {
        return true;
    }
    return searchArray(arr, index + 1, size, target);
}
int minimumArray(int arr[], int index, int size, int &mini)
{
    if (index >= size)
    {
        return mini;
    }
    if (arr[index] < mini)
    {
        mini = arr[index];
    }
    minimumArray(arr, index + 1, size, mini);
}
void evenIndex(int arr[], int size, int index)
{
    if (index >= size)
    {
        return;
    }
    if (index % 2 == 0)
    {
        cout << arr[index] << " ";
    }
    evenIndex(arr, size, index + 1);
}
void doubleArray(int arr[], int size, int index)
{
    // base vase
    if (index >= size)
    {
        return;
    }
    // procsessing index
    arr[index] = 2 * arr[index];
    doubleArray(arr, size, index + 1);
}
int maximum(int arr[], int index, int size, int maxi)
{
    if (index >= size)
    {
        return maxi;
    }
    if (arr[index] > maxi)
    {
        maxi = arr[index];
    }
    return maximum(arr, index + 1, size, maxi);
}
int minimum(int arr[], int index, int size, int mini)
{
    if (index >= size)
    {
        return mini;
    }
    if (arr[index] < mini)
    {
        mini = arr[index];
    }
    return minimum(arr, index + 1, size, mini);
}
void occurance(int arr[], int size, int index, int target)
{
    if (index >= size)
    {
        return;
    }
    if (arr[index] == target)
    {
        cout << index << " ";
    }
    occurance(arr, size, index + 1, target);
}
void reverse(int num)
{
    if (num == 0)
    {
        return;
    }
    cout << num % 10;
    reverse(num / 10);
}
int main()
{
    // climing stairs.

    //     int n;
    //     cin>>n;
    //     climingStair(n);
    // }
    // array using pointers
    // int arr[]={10,20,30,40,50};
    // int n = 5;
    // int target=30;
    // int index=0;
    // int mini=INT_MAX;
    // // searchArray(arr,index,n,target);
    // evenIndex(arr,5,0);

    // DOUBLE ARRAY
    // int arr[]={0,1,2,3,4,5};
    // int size = 6;
    // int index =0;
    // doubleArray(arr,size,index);
    // for(int i=0;i<size;i++){
    //     cout<<arr[i]<<" ";
    // // }
    // int arr[]={1,2,3,4,5};
    // int size=5;
    // // int maxi=INT_MIN;
    // int mini =INT_MAX;
    // cout<<minimum(arr,0,size,mini);

    // int arr[]={10,20,10,10,30,40};
    // int size =6;
    // int index=0;
    // int target=10;
    // occurance(arr,size,index,target);

    int num = 1234;
    reverse(num);
}
